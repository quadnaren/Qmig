## Default values for qmig-chart.
## This is a YAML-formatted file.
## Declare variables to be passed into your templates.

## @param nameOverride String to partially override name template (will maintain the release name) Default: ""
nameOverride: ""

## @param clusterDomain Kubernetes Cluster Domain Default: "cluster.local"
clusterDomain: "cluster.local"

## Required global project information to be created in secret
secret:
  ## @param secret.secretName Name for project secret Default: "" (name: qmig-secret)
  secretName: ""
  data:
    ## @param secret.data.PROJECT_ID ID of project Default: null
    PROJECT_ID: null
    ## @param secret.data.PROJECT_NAME Name of project Default: null
    PROJECT_NAME: null
    ## @param secret.data.POSTGRES_PASSWORD Admin Password for metadata DB Default: null
    POSTGRES_PASSWORD: null
    ## @param secret.data.REDIS_PASS Admin Password for Cache Default: null
    REDIS_PASS: null

## Required docker registry information to pull images from
imageCredentials:
  ## @param imageCredentials.secretName Name for docker secret Default: "" (name: qmig-docker)
  secretName: "" 
  data:
    ## @param imageCredentials.data.registry Server/Registry host. Default: qmigrator.azurecr.io
    registry: null
    ## @param imageCredentials.data.username Username for given docker host Default: null
    username: null
    ## @param imageCredentials.data.password Password for given docker host Default: null
    password: null

## QMigrator shares PersistentVolume & information about the volume folders used by Airflow too
## @param shared.persistentVolume.enabled If false, use emptyDir Default: true
## @param shared.persistentVolume.accessModes How should the volume be accessible in App Default: ReadWriteMany
## @param shared.persistentVolume.annotations Persistent Volume Claim annotations Default: {}
## @param shared.persistentVolume.existingClaim Name of PVC created manually before volume Default: ""
## @param shared.persistentVolume.subPath Subdirectory of data Persistent Volume to mount Default: ""
## @param shared.persistentVolume.size Persistent Volume size Default: 5Gi
## @param shared.persistentVolume.storageClass Persistent Volume Storage Class Default: "" (Default from Kubernetes)
## @param shared.persistentVolume.volumeBindingMode Persistent Volume Binding Mode Default: "" (Default from Kubernetes)
shared:
  persistentVolume:
    enabled: true

    ## Must match those of existing PV or dynamic provisioner
    ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    accessModes:
      - ReadWriteMany

    ## data Persistent Volume Claim annotations
    annotations: {}

    ## Requires app.persistentVolume.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    existingClaim: ""

    ## Subdirectory of data Persistent Volume to mount
    ## Useful if the volume's root directory is not empty
    subPath: ""

    ## data Persistent Volume size
    size: 5Gi

    ## data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    storageClass: ""

    ## data Persistent Volume Binding Mode
    ## If defined, volumeBindingMode: <volumeBindingMode>
    ## If undefined (the default) or set to null, no volumeBindingMode spec is
    ##   set, choosing the default mode.
    volumeBindingMode: ""

  ## Folder used on Airflow must be given to QMigrator for sharing files
  ## Subpath if defined in Airflow | Default is "" (Empty) the root of volume will be used
  ## @param shared.folderPath.extraSubpath subpath for Extra folder in a shared volume Default: "extra"
  ## @param shared.folderPath.dagsSubpath subpath for Dag's folder of airflow in a shared volume Default: "dags"
  ## @param shared.folderPath.logsSubpath subpath for logs folder of airflow in a shared volume Default: "logs"
  folderPath:
    extraSubpath: "extra"
    dagsSubpath: "dags"
    logsSubpath: "logs"

## The Application requires the ingress to be exposed application
## Enable to quickly install controller within the helm
## https://kubernetes.github.io/ingress-nginx/deploy/
ingressController:
  ## @param ingressController.enabled Whether or not to install the ingressController Default: false
  enabled: false
  ## @param ingressController.controllerImage.repository Ingress controller image repository Default: qmigrator.azurecr.io/ingress-nginx/controller
  ## @param ingressController.controllerImage.tag Ingress controller image tag/version Default: "v1.9.4"
  controllerImage:
    repository: qmigrator.azurecr.io/ingress-nginx/controller
    tag: "v1.9.4"
  ## @param ingressController.webhookImage.repository Ingress controller image repository Default: qmigrator.azurecr.io/ingress-nginx/kube-webhook-certgen
  ## @param ingressController.webhookImage.tag Ingress controller image tag/version Default: "v20231011-8b53cabe0"
  webhookImage:
    repository: qmigrator.azurecr.io/ingress-nginx/kube-webhook-certgen
    tag: "v20231011-8b53cabe0"
  ## @param ingressController.imagePullSecrets Ingress Controller component pull secrets Default: {}
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  imagePullSecrets: {}

  ## @param ingressController.isDefaultClass Set Ingress class as default to cluster Default: true
  isDefaultClass: true

## Service account for QMigrator pods to use.
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
serviceAccount:
  ## @param serviceAccount.create Enable creation of ServiceAccount Default: true
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use Default: "" (name: qmig-opr)
  ## If not set and create is true, a name is generated default
  name: ""
  ## @param serviceAccount.annotations Additional custom annotations for the ServiceAccount Default: {}
  annotations: {}

## Enable RBAC (default on most clusters these days)
## Role Based Access
## Ref: https://kubernetes.io/docs/admin/authorization/rbac/
## @param rbac.create Create Role and RoleBinding Default: true
rbac:
  ## - if `false`, you must create a custom Role and RoleBinding for the ServiceAccount defined in `serviceAccount.name`
  create: true

## App component
## @param app.name Name for App component Default: "app"
## @param app.replicas Number of App Components replicas Default: 1
## @param app.image.repository App component image repository Default: "qmigrator.azurecr.io/qubeapp"
## @param app.image.tag App component image tag/version Default: "q1002"
## @param app.image.pullPolicy App component pull policy Default: "IfNotPresent"
## @param app.imagePullSecrets App component pull secrets Default: {}
app:
  name: "app"
  replicas: 1
  image:
    repository: qmigrator.azurecr.io/qubeapp
    pullPolicy: IfNotPresent
    tag: "q1002"

  imagePullSecrets: {}
   
  ## Configure extra options for App component containers' liveness and readiness
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  ## @param app.readinessProbe.enabled Enable readinessProbe on App Component containers Default: true
  readinessProbe:
    enabled: "true"

  ## Configure extra options for App component containers' liveness and readiness
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  ## @param app.livenessProbe.enabled Enable livenessProbe on App Component containers Default: true
  livenessProbe:
    enabled: "true"

  ## @param app.annotations Add extra annotations to the App Component Default: {}
  annotations: {}
  ## @param app.podAnnotations Add extra Pod annotations to the App Component pods Default: {}
  podAnnotations: {}
  ## @param app.securityContexts.pod default security context for App Component pods Default: {}
  ## @param app.securityContexts.container default security context for App Component containers Default: {}
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  securityContexts:
    pod: {}
    container: {}
  ## @param app.tolerations Tolerations for App Component pods assignment Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## @param app.affinity Affinity for App Component pods assignment (evaluated as a template) Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  ## @param app.nodeSelector Node labels for App Component pods assignment Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  nodeSelector: {}

  ## App Component service parameters
  service:
    ## @param app.service.annotations Additional custom annotations for App Component service Default: {}
    annotations: {}
    ## @param app.service.type App Component service type Default: ClusterIP
    type: ClusterIP
    ## @param app.service.port App Component service HTTP port Default: 4200
    port: 4200

  ## App Component ingress parameters
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
  ingress:
    ## @param app.ingress.enabled Enable ingress record generation Default: true
    enabled: true
    ## @param app.ingress.className IngressClass that will be used to implement the Ingress (Kubernetes 1.18+) Default: "" (From Kubernetes)
    ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster.
    ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
    className: ""
    ## @param app.ingress.annotations Additional annotations for the Ingress resource Default: {}
    annotations: {}
    ## @param app.ingress.host Default host for the ingress record Default: ""
    host: ""
    ## @param app.ingress.tls TLS configuration for additional hostname(s) to be covered with this ingress record Default: {}
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    ## e.g:
    ## tls:
    ## - hosts:
    ##     - app.local
    ##   secretName: app.local-tls

  ## @param app.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  resources:
    requests:
      cpu: 100m
      memory: 300Mi
    limits:
      cpu: 300m
      memory: 600Mi

  ## Enable HorizontalPodAutoscaler for App Component pods
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param app.autoscaling.enabled Whether to enable horizontal pod autoscaler Default: true
  ## @param app.autoscaling.minReplicas Configure a minimum amount of pods Default: 1
  ## @param app.autoscaling.maxReplicas Configure a maximum amount of pods Default: 2
  ## @param app.autoscaling.targetCPUUtilizationPercentage Define the CPU target to trigger the scaling actions (utilization percentage) Default: 80
  ## @param app.autoscaling.targetMemoryUtilizationPercentage Define the memory target to trigger the scaling actions (utilization percentage) Default: 80
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

## Engine component
## @param eng.name Name for Engine component Default: "eng"
## @param eng.replicas Number of Engine component replicas Default: 1
## @param eng.image.repository Engine component image repository Default: "qmigrator.azurecr.io/qubeeng"
## @param eng.image.tag Engine component image tag/version Default: "q836"
## @param eng.image.pullPolicy Engine component pull policy Default: "IfNotPresent"
## @param eng.imagePullSecrets Engine component pull secrets Default: {}
eng:
  name: "eng"
  replicas: 1
  image:
    repository: qmigrator.azurecr.io/qubeeng
    pullPolicy: IfNotPresent
    tag: "q836"

  imagePullSecrets: 

  ## Configure extra options for Engine component containers' liveness and readiness
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  ## @param eng.readinessProbe.enabled Enable readinessProbe on Engine component containers Default: true
  readinessProbe:
    enabled: "true"

  ## Configure extra options for Engine component containers' liveness and readiness
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
  ## @param eng.livenessProbe.enabled Enable livenessProbe on Engine component containers Default: true
  livenessProbe:
    enabled: "true"

  ## @param eng.annotations Add extra annotations to the Engine component Default: {}
  annotations: {}
  ## @param eng.podAnnotations Add extra Pod annotations to the Engine component pods Default: {}
  podAnnotations: {}
  ## @param eng.securityContexts.pod default security context for Engine component pods Default: {}
  ## @param eng.securityContexts.container default security context for Engine component containers Default: {}
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  securityContexts:
    pod: {}
    container: {}
  ## @param eng.tolerations Tolerations for Engine component pods assignment Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## @param eng.affinity Affinity for Engine component pods assignment (evaluated as a template) Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  ## @param eng.nodeSelector Node labels for Engine component pods assignment Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  nodeSelector: {}

  ## Engine component service parameters
  service:
    ## @param eng.service.annotations Additional custom annotations for Engine component service Default: {}
    annotations: {} 
    ## @param eng.service.type Engine component service type Default: ClusterIP
    type: ClusterIP
    ## @param eng.service.port Engine component service HTTP port Default: 8080
    port: 8080
 
  ## @param eng.extraVolumeMounts Optionally specify an extra list of additional volumeMounts for all the Engine component pods Default: []
  extraVolumeMounts: []
  ## @param emg.extraVolumes Optionally specify an extra list of additional volumes for all the Engine component pods Default: []
  extraVolumes: []

  ## Engine component ingress parameters
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
  ingress:
    ## @param eng.ingress.enabled Enable ingress record generation Default: true
    enabled: true
    ## @param eng.ingress.className IngressClass that will be used to implement the Ingress (Kubernetes 1.18+) Default: "" (From Kubernetes)
    ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster.
    ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
    className: ""
    ## @param eng.ingress.annotations Additional annotations for the Ingress resource Default: {}
    annotations: {}
    ## @param eng.ingress.host Default host for the ingress record Default: ""
    host: ""
    ## @param eng.ingress.tls TLS configuration for additional hostname(s) to be covered with this ingress record Default: {}
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    ## e.g:
    ## tls:
    ## - hosts:
    ##     - eng.local
    ##   secretName: eng.local-tls

  ## @param eng.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  resources:
    requests:
      cpu: 200m
      memory: 300Mi
    limits:
      cpu: 400m
      memory: 600Mi

  ## Enable HorizontalPodAutoscaler for Engine component pods
  ## ref: https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/
  ## @param eng.autoscaling.enabled Whether to enable horizontal pod autoscaler Default: true
  ## @param eng.autoscaling.minReplicas Configure a minimum amount of pods Default: 1
  ## @param eng.autoscaling.maxReplicas Configure a maximum amount of pods Default: 2
  ## @param eng.autoscaling.targetCPUUtilizationPercentage Define the CPU target to trigger the scaling actions (utilization percentage) Default: 80
  ## @param eng.autoscaling.targetMemoryUtilizationPercentage Define the memory target to trigger the scaling actions (utilization percentage) Default: 80
  autoscaling:
    enabled: true
    minReplicas: 1
    maxReplicas: 2
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

  ## @param eng.env Add extra environment variables for the Engine component pods Default: []
  ## Example:
  ## env:
  ##  ENV_NAME: ENV_VALUE
  env: []

  ## @param eng.envSecret List of secrets with extra environment variables for all the component pods Default: []
  ## Example:
  ## envSecret:
  ##  - name: ENV_NAME
  ##    secretRef: SecretName
  ##    secretKey: SecretKey inside secret
  envSecret: []

## Metadata DB component
## @param db.name Name for DB component Default: "db"
## @param db.replicas Number of DB component replicas Default: 1
## @param db.image.repository DB component image repository Default: "postgres" (hub.docker.com)
## @param db.image.tag DB component image tag/version Default: "14.2"
## @param db.image.pullPolicy DB component pull policy Default: "IfNotPresent"
## @param db.imagePullSecrets DB component pull secrets Default: {}
db:
  name: "db"
  replicas: 1
  image:
    repository: postgres
    pullPolicy: IfNotPresent
    tag: "14.2"

  imagePullSecrets: {}

  ## @param db.dbshConfig.stringOverride Override shell script to be run on the initial time of DB Default: ""
  ## the full content of the `db-sh.sh` file (as a string)
  ##   stringOverride: |
  ##     #!/bin/bash
  ##     echo "Hello World"
  dbshConfig:
    stringOverride: ""

  ## @param db.annotations Add extra annotations to the DB component Default: {}
  annotations: {}
  ## @param db.podAnnotations Add extra Pod annotations to the DB component pods Default: {}
  podAnnotations: {}
  ## @param db.securityContexts.pod default security context for DB Component pods Default: {}
  ## @param db.securityContexts.container default security context for DB Component containers Default: {}
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  securityContexts:
    pod: {}
    container: {}
  ## @param db.tolerations Tolerations for DB component pods assignment Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## @param db.affinity Affinity for DB component pods assignment (evaluated as a template) Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  ## @param db.nodeSelector Node labels for DB component pods assignment Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  nodeSelector: {}

  ## Initialize the container of DB to load the db components
  ## @param db.initContainers.image.repository Load DB image repository Default: "qmigrator.azurecr.io/qmigdb-ini"
  ## @param db.initContainers.image.tag Load DB image tag/version Default: "1164"
  initContainer:
    loadDB:
      image:
        repository: qmigrator.azurecr.io/qmigdb-ini
        tag: "1164"
      ## @param db.initContainers.resources Set Init container requests and limits for different resources like CPU or memory
      resources:
        requests:
          cpu: 200m
          memory: 300Mi
        limits:
          cpu: 400m
          memory: 600Mi
      imagePullSecrets: {}

  ## @param db.persistentVolume.enabled If false, use emptyDir Default: true
  ## @param db.persistentVolume.accessModes How should the volume accessible in App Default: ReadWriteOnce
  ## @param db.persistentVolume.annotations Persistent Volume Claim annotations Default: {}
  ## @param db.persistentVolume.existingClaim Name of PVC created manually before volume Default: ""
  ## @param db.persistentVolume.subPath Subdirectory of data Persistent Volume to mount Default: ""
  ## @param db.persistentVolume.size Persistent Volume size Default: 5Gi
  ## @param db.persistentVolume.storageClass Persistent Volume Storage Class Default: "" (Default from Kubernetes)
  ## @param db.persistentVolume.volumeBindingMode Persistent Volume Binding Mode Default: "" (Default from Kubernetes)
  persistentVolume:
    ## If false, use emptyDir
    enabled: true

    ## Must match those of existing PV or dynamic provisioner
    ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    accessModes:
      - ReadWriteOnce

    ## data Persistent Volume Claim annotations
    annotations: {}

    ## Requires db.persistentVolume.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    existingClaim: ""

    ## Subdirectory of data Persistent Volume to mount
    ## Useful if the volume's root directory is not empty
    ## subPath: ""

    ## data Persistent Volume size
    size: 5Gi

    ## data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    storageClass: ""

    ## data Persistent Volume Binding Mode
    ## If defined, volumeBindingMode: <volumeBindingMode>
    ## If undefined (the default) or set to null, no volumeBindingMode spec is
    ##   set, choosing the default mode.
    volumeBindingMode: ""

  ## DB component service parameters
  service:
    ## @param db.service.annotations Additional custom annotations for DB component service Default: {}
    annotations: {}
    ## @param db.service.type DB component service type Default: "ClusterIP"
    type: ClusterIP
    ## @param db.service.port DB component service HTTP port Default: 5432
    port: 5432

  ## @param db.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  resources:
    requests:
      cpu: 200m
      memory: 600Mi
    limits:
      cpu: 400m
      memory: 800Mi

  ## @param db.env Add extra environment variables for the DB component pods Default: [JDBC_PARAMS]
  ## Example:
  ## env:
  ##  ENV_NAME: ENV_VALUE
  env:
    JDBC_PARAMS: "sslfactory=org.postgresql.ssl.NonValidatingFactory"

  ## @param db.envSecret List of secrets with extra environment variables for all the component pods Default: []
  ## Example:
  ## envSecret:
  ##  - name: ENV_NAME
  ##    secretRef: SecretName
  ##    secretKey: SecretKey inside secret
  envSecret: []
 
  ## @param db.extraVolumeMounts Optionally specify an extra list of additional volumeMounts for all the DB component pods Default: []
  extraVolumeMounts: [] 
  ## @param db.extraVolumes Optionally specify an extra list of additional volumes for all the DB component pods Default: []
  extraVolumes: []

## Cache component
## @param msg.name Name for Cache component Default: "msg"
## @param msg.replicas Number of Cache component replicas Default: 1
## @param msg.image.repository Cache component image repository Default: "eqalpha/keydb"
## @param msg.image.tag Cache component image tag/version Default: "x86_64_v6.3.4"
## @param msg.image.pullPolicy Cache component pull policy Default: IfNotPresent
## @param msg.imagePullSecrets Cache component pull secrets Default: {}
msg:
  name: "msg"
  replicas: 1
  image:
    repository: eqalpha/keydb
    pullPolicy: IfNotPresent
    tag: "x86_64_v6.3.4"

  imagePullSecrets: {}

  ## @param msg.args Args to override Cache component containers Default: []
  args: []

  ## @param msg.keyDBConfig.stringOverride Override shell script to be run on the initial time of Cache Default: ""
  ## the full content of the `msg-keys.conf` file (as a string)
  ##   stringOverride: |
  ##     databases 16
  ##     port 6379
  keyDBConfig:
    stringOverride: ""
   
  ## @param msg.annotations Add extra annotations to the Cache component Default: {}
  annotations: {}
  ## @param msg.podAnnotations Add extra Pod annotations to the Cache component pods Default: {}
  podAnnotations: {}
  ## @param msg.securityContexts.pod default security context for Cache Component pods Default: {}
  ## @param msg.securityContexts.container default security context for Cache Component containers Default: {}
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  securityContexts:
    pod: {}
    container: {}
  ## @param msg.tolerations Tolerations for Cache component pods assignment Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## @param msg.affinity Affinity for Cache component pods assignment (evaluated as a template) Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  ## @param msg.nodeSelector Node labels for Cache component pods assignment Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  nodeSelector: {}

  ## PersistentVolume template for Cache component volume in QMigrator
  ## @param msg.persistentVolume.enabled If false, use emptyDir Default: true
  ## @param msg.persistentVolume.accessModes How should the volume be accessible in App Default: ReadWriteOnce
  ## @param msg.persistentVolume.annotations Persistent Volume Claim annotations Default: {}
  ## @param msg.persistentVolume.existingClaim Name of PVC created manually before volume Default: ""
  ## @param msg.persistentVolume.subPath Subdirectory of data Persistent Volume to mount Default: ""
  ## @param msg.persistentVolume.size Persistent Volume size Default: 5Gi
  ## @param msg.persistentVolume.storageClass Persistent Volume Storage Class Default: "" (Default from Kubernetes)
  ## @param msg.persistentVolume.volumeBindingMode Persistent Volume Binding Mode Default: "" (Default from Kubernetes)
  persistentVolume:
    ## If false, use emptyDir
    enabled: true

    ## Must match those of existing PV or dynamic provisioner
    ## Ref: http://kubernetes.io/docs/user-guide/persistent-volumes/
    accessModes:
      - ReadWriteOnce

    ## data Persistent Volume Claim annotations
    annotations: {}

    ## Requires app.persistentVolume.enabled: true
    ## If defined, PVC must be created manually before volume will be bound
    existingClaim: ""

    ## Subdirectory of data Persistent Volume to mount
    ## Useful if the volume's root directory is not empty
    subPath: ""

    ## data Persistent Volume size
    size: 5Gi

    ## data Persistent Volume Storage Class
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    storageClass: ""

    ## data Persistent Volume Binding Mode
    ## If defined, volumeBindingMode: <volumeBindingMode>
    ## If undefined (the default) or set to null, no volumeBindingMode spec is
    ##   set, choosing the default mode.
    volumeBindingMode: ""

  ## Cache component service parameters
  service:
    ## @param msg.service.annotations Additional custom annotations for Cache component service Default: {}
    annotations: {}
    ## @param msg.service.type Cache component service type Default: "ClusterIP"
    type: ClusterIP
    ## @param msg.service.port Cache component service HTTP port Default: 6378
    port: 6379

  ## @param msg.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  resources:
    requests:
      cpu: 100m
      memory: 200Mi
    limits:
      cpu: 200m
      memory: 300Mi

  ## @param msg.master.enabled Run Cache component as master node Default: true
  master:
    enabled: "true"

  ## @param msg.auth.enabled Enabled authentication with password on Cache component Default: true
  ## provided in secret secret.data.REDIS_PASS
  auth:
    enabled: true

  ## @param msg.env Add extra environment variables for the Cache component pods Default: []
  ## Example:
  ## env:
  ##  ENV_NAME: ENV_VALUE
  env: []

  ## @param msg.envSecret List of secrets with extra environment variables for all the component pods Default: []
  ## Example:
  ## envSecret:
  ##  - name: ENV_NAME
  ##    secretRef: SecretName
  ##    secretKey: SecretKey inside secret
  envSecret: []
 
  ## @param msg.extraVolumeMounts Optionally specify an extra list of additional volumeMounts for all the Cache component pods Default: []
  extraVolumeMounts: []
  ## @param msg.extraVolumes Optionally specify an extra list of additional volumes for all the Cache component pods Default: []
  extraVolumes: []


## Assessment
## @param asses.name Name for Assessment Default: "asses"
## @param asses.image.repository Assessment image repository Default: "qmigrator.azurecr.io/webassotp"
## @param asses.image.tag Assessment image tag/version Default: "992"
## @param asses.image.pullPolicy Assessment pull policy Default: "IfNotPresent"
## @param asses.imagePullSecrets Assessment pull secrets Default: {}
asses:
  name: "asses"
  image:
    repository: qmigrator.azurecr.io/webassotp
    pullPolicy: IfNotPresent
    tag: "992"

  imagePullSecrets: {}

  ## @param asses.annotations Add extra annotations to the Assessment Default: {}
  annotations: {}
  ## @param asses.podAnnotations Add extra Pod annotations to the Assessment pods Default: {}
  podAnnotations: {}
  ## @param asses.securityContexts.pod default security context for Assessment pods Default: {}
  ## @param asses.securityContexts.container default security context for Assessment containers Default: {}
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  securityContexts:
    pod: {}
    container: {}
  ## @param asses.tolerations Tolerations for Assessment pods assignment Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## @param asses.affinity Affinity for Assessment pods assignment (evaluated as a template) Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  ## @param asses.nodeSelector Node labels for Assessment pods assignment Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  nodeSelector: {}

  ## @param asses.schedule Specifies the cron job schedule using the standard cron syntax Default: "*/10 * * * *"
  schedule: "*/10 * * * *"
  ## @param asses.failedJobsHistoryLimit How many failed executions to track in history. Default: 2
  failedJobsHistoryLimit: 2
  ## @param asses.successfulJobsHistoryLimit How many successful executions to track in history. Default: 3
  successfulJobsHistoryLimit: 2
  ## @param asses.startingDeadlineSeconds How many seconds a job is allowed to miss its scheduled start time before it is considered failed Default: 500
  startingDeadlineSeconds: 500
  ## @param asses.concurrencyPolicy Handle scenario when concurrent jobs are scheduled Default: Forbid
  concurrencyPolicy: Forbid
  ## @param asses.restartPolicy Restart the container keeping the same Pod in Node Default: Never
  restartPolicy: Never
  ## @param asses.ttlSecondsAfterFinished Clean up finished Jobs after the specific seconds Default: 600
  ttlSecondsAfterFinished: 600
  ## @param asses.backoffLimit Each pod failure is counted towards the specified limit Default: 2
  backoffLimit: 2
 
  ## @param asses.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  resources:
    requests:
      cpu: 300m
      memory: 600Mi
    limits:
      cpu: 600m
      memory: 1200Mi

  ## @param asses.env Add extra environment variables for the Assessment pods Default: []
  ## Example:
  ## env:
  ##  ENV_NAME: ENV_VALUE
  env: []

  ## @param asses.envSecret List of secrets with extra environment variables for all the component pods Default: []
  ## Example:
  ## envSecret:
  ##  - name: ENV_NAME
  ##    secretRef: SecretName
  ##    secretKey: SecretKey inside secret
  envSecret: []
 
  ## @param asses.extraVolumeMounts Optionally specify an extra list of additional volumeMounts for all the Assessment pods Default: []
  extraVolumeMounts: []
  ## @param asses.extraVolumes Optionally specify an extra list of additional volumes for all the Assessment pods Default: []
  extraVolumes: []

## Conversion
## @param convs.name Name for Conversion Default: "convs"
## @param convs.image.repository Conversion image repository Default: "qmigrator.azurecr.io/webconvotp"
## @param convs.image.tag Conversion image tag/version Default: "993"
## @param convs.image.pullPolicy Conversion pull policy Default: "IfNotPresent"
## @param convs.imagePullSecrets Conversion pull secrets Default: {}
convs:
  name: "convs"
  image:
    repository: qmigrator.azurecr.io/webconvotp
    pullPolicy: IfNotPresent
    tag: "993"

  imagePullSecrets: {}

  ## @param convs.annotations Add extra annotations to the Conversion Default: {}
  annotations: {}
  ## @param convs.podAnnotations Add extra Pod annotations to the Conversion pods Default: {}
  podAnnotations: {}
  ## @param convs.securityContexts.pod default security context for Conversion pods Default: {}
  ## @param convs.securityContexts.container default security context for Conversion containers Default: {}
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  securityContexts:
    pod: {}
    container: {}
  ## @param convs.tolerations Tolerations for Conversion pods assignment Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## @param convs.affinity Affinity for Conversion pods assignment (evaluated as a template) Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  ## @param convs.nodeSelector Node labels for Conversion pods assignment Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  nodeSelector: {}

  ## @param convs.schedule Specifies the cron job schedule using the standard cron syntax Default: "*/10 * * * *"
  schedule: "*/10 * * * *"
  ## @param convs.failedJobsHistoryLimit How many failed executions to track in history. Default: 2
  failedJobsHistoryLimit: 2
  ## @param convs.successfulJobsHistoryLimit How many successful executions to track in history. Default: 2
  successfulJobsHistoryLimit: 2
  ## @param convs.startingDeadlineSeconds How many seconds a job is allowed to miss its scheduled start time before it is considered failed Default: 500
  startingDeadlineSeconds: 500
  ## @param convs.concurrencyPolicy Handle scenario when concurrent jobs are scheduled Default: Forbid
  concurrencyPolicy: Forbid
  ## @param convs.restartPolicy Restart the container keeping the same Pod in Node Default: Never
  restartPolicy: Never
  ## @param convs.ttlSecondsAfterFinished Clean up finished Jobs after the specific seconds Default: 600
  ttlSecondsAfterFinished: 600
  ## @param convs.backoffLimit Each pod failure is counted towards the specified limit Default: 2
  backoffLimit: 2
 
  ## @param convs.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  resources:
    requests:
      cpu: 300m
      memory: 600Mi
    limits:
      cpu: 600m
      memory: 1200Mi

  ## @param convs.env Add extra environment variables for the Conversion pods Default: []
  ## Example:
  ## env:
  ##  ENV_NAME: ENV_VALUE
  env: []

  ## @param convs.envSecret List of secrets with extra environment variables for all the component pods Default: []
  ## Example:
  ## envSecret:
  ##  - name: ENV_NAME
  ##    secretRef: SecretName
  ##    secretKey: SecretKey inside secret
  envSecret: []
 
  ## @param convs.extraVolumeMounts Optionally specify an extra list of additional volumeMounts for all the Conversion pods Default: []
  extraVolumeMounts: []
  ## @param convs.extraVolumes Optionally specify an extra list of additional volumes for all the Conversion pods Default: []
  extraVolumes: []


## Migration
## @param migrt.name Name for Migration Default: "migrt"
## @param migrt.image.repository Migration image repository Default: "qmigrator.azurecr.io/webdmotp"
## @param migrt.image.tag Migration image tag/version Default: "994"
## @param migrt.image.pullPolicy Migration pull policy Default: "IfNotPresent"
## @param migrt.imagePullSecrets Migration pull secrets Default: {}
migrt:
  name: "migrt"
  image:
    repository: qmigrator.azurecr.io/webdmotp
    pullPolicy: IfNotPresent
    tag: "994"

  imagePullSecrets: {}

  ## @param migrt.annotations Add extra annotations to the Migration Default: {}
  annotations: {}
  ## @param migrt.podAnnotations Add extra Pod annotations to the Migration pods Default: {}
  podAnnotations: {}
  ## @param migrt.securityContexts.pod default security context for Migration pods Default: {}
  ## @param migrt.securityContexts.container default security context for Migration containers Default: {}
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  securityContexts:
    pod: {}
    container: {}
  ## @param migrt.tolerations Tolerations for Migration pods assignment Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## @param migrt.affinity Affinity for Migration pods assignment (evaluated as a template) Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  ## @param migrt.nodeSelector Node labels for Migration pods assignment Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  nodeSelector: {}

  ## @param migrt.schedule Specifies the cron job schedule using the standard cron syntax Default: "*/10 * * * *"
  schedule: "*/10 * * * *"
  ## @param migrt.failedJobsHistoryLimit How many failed executions to track in history. Default: 2
  failedJobsHistoryLimit: 2
  ## @param migrt.successfulJobsHistoryLimit How many successful executions to track in history. Default: 2
  successfulJobsHistoryLimit: 2
  ## @param migrt.startingDeadlineSeconds How many seconds a job is allowed to miss its scheduled start time before it is considered failed Default: 500
  startingDeadlineSeconds: 500
  ## @param migrt.concurrencyPolicy Handle scenario when concurrent jobs are scheduled Default: "Forbid"
  concurrencyPolicy: Forbid
  ## @param migrt.restartPolicy Restart the container keeping the same Pod in Node Default: "Never"
  restartPolicy: Never
  ## @param migrt.ttlSecondsAfterFinished Clean up finished Jobs after the specific seconds Default: 600
  ttlSecondsAfterFinished: 600
  ## @param migrt.backoffLimit Each pod failure is counted towards the specified limit Default: 2
  backoffLimit: 2
 
  ## @param migrt.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  resources:
    requests:
      cpu: 300m
      memory: 600Mi
    limits:
      cpu: 600m
      memory: 1200Mi

  ## @param migrt.env Add extra environment variables for the Migration pods Default: []
  ## Example:
  ## env:
  ##  ENV_NAME: ENV_VALUE
  env: []

  ## @param migrt.envSecret List of secrets with extra environment variables for all the component pods Default: []
  ## Example:
  ## envSecret:
  ##  - name: ENV_NAME
  ##    secretRef: SecretName
  ##    secretKey: SecretKey inside secret
  envSecret: []
 
  ## @param migrt.extraVolumeMounts Optionally specify an extra list of additional volumeMounts for all the Migration pods Default: []
  extraVolumeMounts: []
  ## @param migrt.extraVolumes Optionally specify an extra list of additional volumes for all the Migration pods Default: []
  extraVolumes: []


## Testing
## @param tests.name Name for Testing Default: "tests"
## @param tests.image.repository Testing image repository Default: "qmigrator.azurecr.io/webtestotp"
## @param tests.image.tag Testing image tag/version Default: "971"
## @param tests.image.pullPolicy Testing pull policy Default: "IfNotPresent"
## @param tests.imagePullSecrets Testing pull secrets Default: {}
tests:
  name: "tests"
  image:
    repository: qmigrator.azurecr.io/webtestotp
    pullPolicy: IfNotPresent
    tag: "971"

  imagePullSecrets: {}

  ## @param tests.annotations Add extra annotations to the Testing Default: {}
  annotations: {}
  ## @param tests.podAnnotations Add extra Pod annotations to the Testing pods Default: {}
  podAnnotations: {}
  ## @param tests.securityContexts.pod default security context for Testing pods Default: {}
  ## @param tests.securityContexts.container default security context for Testing containers Default: {}
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  securityContexts:
    pod: {}
    container: {}
  ## @param tests.tolerations Tolerations for Testing pods assignment Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## @param tests.affinity Affinity for Testing pods assignment (evaluated as a template) Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  ## @param tests.nodeSelector Node labels for Testing pods assignment Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  nodeSelector: {}

  ## @param tests.schedule Specifies the cron job schedule using the standard cron syntax Default: "*/10 * * * *"
  schedule: "*/10 * * * *"
  ## @param tests.failedJobsHistoryLimit How many failed executions to track in history. Default: 2
  failedJobsHistoryLimit: 2
  ## @param tests.successfulJobsHistoryLimit How many successful executions to track in history. Default: 2
  successfulJobsHistoryLimit: 2
  ## @param tests.startingDeadlineSeconds How many seconds a job is allowed to miss its scheduled start time before it is considered failed Default: 500
  startingDeadlineSeconds: 500
  ## @param tests.concurrencyPolicy Handle scenario when concurrent jobs are scheduled Default: "Forbid"
  concurrencyPolicy: Forbid
  ## @param tests.restartPolicy Restart the container keeping the same Pod in Node Default: "Never"
  restartPolicy: Never
  ## @param tests.ttlSecondsAfterFinished Clean up finished Jobs after the specific seconds Default: 600
  ttlSecondsAfterFinished: 600
  ## @param tests.backoffLimit Each pod failure is counted towards the specified limit Default: 2
  backoffLimit: 2
 
  ## @param tests.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  resources:
    requests:
      cpu: 300m
      memory: 600Mi
    limits:
      cpu: 600m
      memory: 1200Mi

  ## @param tests.env Add extra environment variables for the Testing pods Default: []
  ## Example:
  ## env:
  ##  ENV_NAME: ENV_VALUE
  env: []

  ## @param tests.envSecret List of secrets with extra environment variables for all the component pods Default: []
  ## Example:
  ## envSecret:
  ##  - name: ENV_NAME
  ##    secretRef: SecretName
  ##    secretKey: SecretKey inside secret
  envSecret: []
 
  ## @param tests.extraVolumeMounts Optionally specify an extra list of additional volumeMounts for all the Testing pods Default: []
  extraVolumeMounts: []
  ## @param tests.extraVolumes Optionally specify an extra list of additional volumes for all the Testing pods Default: []
  extraVolumes: []


## Performance
## @param perfs.name Name for Performance Default: "perfs"
## @param perfs.image.repository Performance image repository Default: "qmigrator.azurecr.io/webperfotp"
## @param perfs.image.tag Performance image tag/version Default: "985"
## @param perfs.image.pullPolicy Performance pull policy Default: "qmigrator.azurecr.io/webperfotp"
## @param perfs.imagePullSecrets Performance pull secrets Default: {}
perfs:
  name: "perfs"
  image:
    repository: qmigrator.azurecr.io/webperfotp
    pullPolicy: IfNotPresent
    tag: "985"

  imagePullSecrets: {}

  ## @param perfs.annotations Add extra annotations to the Performance Default: {}
  annotations: {}
  ## @param perfs.podAnnotations Add extra Pod annotations to the Performance pods Default: {}
  podAnnotations: {}
  ## @param perfs.securityContexts.pod default security context for Performance pods Default: {}
  ## @param perfs.securityContexts.container default security context for Performance containers Default: {}
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  securityContexts:
    pod: {}
    container: {}
  ## @param perfs.tolerations Tolerations for Performance pods assignment Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## @param perfs.affinity Affinity for Performance pods assignment (evaluated as a template) Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  ## @param perfs.nodeSelector Node labels for Performance pods assignment Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  nodeSelector: {}

  ## @param perfs.schedule Specifies the cron job schedule using the standard cron syntax Default: "*/10 * * * *"
  schedule: "*/10 * * * *"
  ## @param perfs.failedJobsHistoryLimit How many failed executions to track in history. Default: 2
  failedJobsHistoryLimit: 2
  ## @param perfs.successfulJobsHistoryLimit How many successful executions to track in history. Default: 2
  successfulJobsHistoryLimit: 2
  ## @param perfs.startingDeadlineSeconds How many seconds a job is allowed to miss its scheduled start time before it is considered failed Default: 500
  startingDeadlineSeconds: 500
  ## @param perfs.concurrencyPolicy Handle scenario when concurrent jobs are scheduled Default: Forbid
  concurrencyPolicy: Forbid
  ## @param perfs.restartPolicy Restart the container keeping the same Pod in Node Default: Never
  restartPolicy: Never
  ## @param perfs.ttlSecondsAfterFinished Clean up finished Jobs after the specific seconds Default: 600
  ttlSecondsAfterFinished: 600
  ## @param perfs.backoffLimit Each pod failure is counted towards the specified limit Default: 2
  backoffLimit: 2
 
  ## @param perfs.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
  resources:
    requests:
      cpu: 300m
      memory: 600Mi
    limits:
      cpu: 600m
      memory: 1200Mi

  ## @param perfs.env Add extra environment variables for the Performance pods Default: []
  ## Example:
  ## env:
  ##  ENV_NAME: ENV_VALUE
  env: []

  ## @param perfs.envSecret List of secrets with extra environment variables for all the component pods Default: []
  ## Example:
  ## envSecret:
  ##  - name: ENV_NAME
  ##    secretRef: SecretName
  ##    secretKey: SecretKey inside secret
  envSecret: []

  ## @param perfs.extraVolumeMounts Optionally specify an extra list of additional volumeMounts for all the Performance pods Default: []
  extraVolumeMounts: []
  ## @param perfs.extraVolumes Optionally specify an extra list of additional volumes for all the Performance pods Default: []
  extraVolumes: []


## Airflow
## @param airflow.enabled Name for Airflow Default: false
## @param airflow.name Name for Airflow Default: "airflow"
## @param airflow.uid User id for Airflow Default: "106665"
## @param airflow.gid group id for Airflow Default: "106966"
## @param airflow.image.repository Airflow image repository Default: "qmigrator.azurecr.io/qmigair"
## @param airflow.image.tag Airflow image tag/version Default: "2.8.4-ofjv-lvs"
## @param airflow.image.pullPolicy Airflow pull policy Default: "IfNotPresent"
## @param airflow.imagePullSecrets Airflow pull secrets Default: {}
airflow:
  enabled: false
  name: "airflow"
  uid: 106665
  gid: 106966

  ## Enable RBAC (default on most clusters these days)
  ## Role Based Access
  ## Ref: https://kubernetes.io/docs/admin/authorization/rbac/
  ## @param airflow.rbac.create Create Role and RoleBinding Default: true
  rbac:
    ## - if `false`, you must create a custom Role and RoleBinding for the ServiceAccount defined in `serviceAccount.name`
    create: true

  image:
    repository: qmigrator.azurecr.io/qmigair
    pullPolicy: IfNotPresent
    tag: "2.8.4-ofjv-lvs"

  imagePullSecrets: {}

  ## @param airflow.baseUrl Base URL of Airflow Webserver Default: http://0.0.0.0:8080/airflow
  baseUrl: http://0.0.0.0:8080/airflow

  ## Config settings to go into the mounted airflow.cfg
  ## @param airflow.config Config settings to go into the mounted airflow.cfg Default:
  config:
    api:
      auth_backends: airflow.api.auth.backend.basic_auth
    celery:
      worker_concurrency: 16
    celery_kubernetes_executor:
      kubernetes_queue: kubernetes
    cli:
     endpoint_url: '{{ include "qmig.airflow.baseUrl" . }}'
    core: 
      colored_console_log: False
      dagbag_import_timeout: 30
      dags_folder: '{{ include "qmig.airflow.dags" . }}'
      executor: KubernetesExecutor
      load_examples: False
      remote_logging: False
      parallelism: 64
      default_pool_task_slot_count: 200
    database: 
      load_default_connections: False
    kubernetes: 
      airflow_configmap: '{{ include "qmig.airflow.config" . }}'
      airflow_local_settings_configmap: '{{ include "qmig.airflow.config" . }}'
      multi_namespace_mode: False
      namespace: '{{ .Release.Namespace }}'
      pod_template_file: '{{ include "qmig.airflow.template" . }}/pod_template_file.yaml'
      worker_container_repository: '{{ .Values.airflow.image.repository }}'
      worker_container_tag: '{{ .Values.airflow.image.tag }}'
    kubernetes_executor: 
      multi_namespace_mode: False
      namespace: qmig-ns
      pod_template_file: '{{ include "qmig.airflow.template" . }}/pod_template_file.yaml'
      worker_container_repository: '{{ .Values.airflow.image.repository }}'
      worker_container_tag: '{{ .Values.airflow.image.tag }}'
    logging: 
      colored_console_log: False
      remote_logging: False
    metrics: 
      statsd_host: qmig-air-statsd
      statsd_on: False
      statsd_port: 9125
      statsd_prefix: airflow
    scheduler: 
      enable_health_check: True
      run_duration: 41460
      standalone_dag_processor: False
      statsd_host: qmig-air-statsd
      statsd_on: False
      statsd_port: 9125
      statsd_prefix: airflow
    triggerer: 
      default_capacity: 1000
    webserver: 
      base_url: '{{ include "qmig.airflow.baseUrl" . }}'
      cookie_secure: False
      enable_proxy_fix: True
      expose_config: False
      rbac: True
      warn_deployment_exposure: False

  ## @param airflow.airflowLocalSettings file as a string (can be templated) Default: ~
  airflowLocalSettings: ~

  ## @param airflow.podTemplate is a templated string containing the contents of `pod_template_file.yaml` used for KubernetesExecutor workers Default: ~
  podTemplate: ~
  ## podTemplate: |
  ##   apiVersion: v1
  ##   kind: Pod
  ##   metadata:
  ##     name: placeholder-name
  ##     labels:
  ##       tier: airflow

  ## @param airflow.webserverConfig string (can be templated) will be mounted into the Airflow Webserver Default: ~
  ## as a custom webserver_config.py
  webserverConfig: ~
  ## webserverConfig: |
  ##   from airflow import configuration as conf
  ##   # The SQLAlchemy connection string.
  ##   SQLALCHEMY_DATABASE_URI = conf.get('data

  ## @param airflow.securityContexts.pod Detailed default security context for Airflow Pods Default: {}
  ## @param airflow.securityContexts.containers Detailed default security context for Airflow Container Default: {}
  securityContexts:
    pod: {}
    container: {}

  ## @param airflow.tolerations Tolerations for Airflow pods Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  tolerations: []
  ## @param airflow.affinity Affinity for Airflow pods (evaluated as a template) Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: {}
  ## @param airflow.nodeSelector Node labels for Airflow pods Default: {}
  ## Ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  nodeSelector: {}

  
  ## Airflow ingress parameters
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/
  ingress:
    ## @param airflow.ingress.enabled Enable ingress record generation Default: true
    enabled: true
    ## @param airflow.ingress.className IngressClass that will be used to implement the Ingress (Kubernetes 1.18+) Default: "" (From Kubernetes)
    ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster.
    ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
    className: ""
    ## @param airflow.ingress.annotations Additional annotations for the Ingress resource Default: {}
    annotations: {}
    ## @param airflow.ingress.host Default host for the ingress record Default: ""
    host: ""
    ## @param airflow.ingress.tls TLS configuration for additional hostname(s) to be covered with this ingress record Default: {}
    ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    ## e.g:
    ## tls:
    ## - hosts:
    ##     - airflow.local
    ##   secretName: airflow.local-tls

  ## @param airflow.env Add extra environment variables for the Airflow pods Default: []
  ## Example:
  ## env:
  ##  ENV_NAME: ENV_VALUE
  env: []

  ## @param airflow.envSecret List of secrets with extra environment variables for all the component pods Default: []
  ## Example:
  ## envSecret:
  ##  - name: ENV_NAME
  ##    secretRef: SecretName
  ##    secretKey: SecretKey inside secret
  envSecret: []

  ## Required Airflow credentials for secret
  secret:
    ## @param airflow.secret.secretName Name for project secret Default: "" (name: qmig-air-secret)
    secretName: ""
    data:
      ## @param airflow.secret.data.airflow_secret_key Random generated key for webserver Default: null
      airflow_secret_key: null
      ## @param airflow.secret.data.airflow_fernet_key Random generated key for airflow Default: null
      airflow_fernet_key: null
      ## @param airflow.secret.data.airflow_password Airflow login password Default: null
      airflow_password: null
      ## @param airflow.secret.data.connection Connection string for Airflow metadata DB Default: null
      ## postgresql://<stats user>:<password>@127.0.0.1:5432/database?<connection params>
      connection: null

  ## Airflow Webserver
  ## @param airflow.webserver.replicas Number of Airflow Webserver replicas Default: 1
  webserver:
    replicas: 1
    ## @param airflow.webserver.safeToEvict This setting tells Kubernetes that its ok to evict Default: true
    safeToEvict: true
    ## @param airflow.webserver.annotations Add extra annotations to the Airflow Webserver Default: {}
    annotations: {}
    ## @param airflow.webserver.podAnnotations Add extra Pod annotations to the Airflow Webserver pods Default: {}
    podAnnotations: {}
    ## @param airflow.webserver.securityContexts.pod default security context for Webserver pods Default: {}
    ## @param airflow.webserver.securityContexts.container default security context for Webserver containers Default: {}
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    securityContexts:
      pod: {}
      container: {}

    ## Configure extra options for Airflow containers' liveness, readiness, and startup
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
    ## @param airflow.webserver.livenessProbe livenessProbe on Airflow webserver
    ## @param airflow.webserver.readinessProbe readinessProbe on Airflow webserver
    ## @param airflow.webserver.startupProbe startupProbe on Airflow webserver
    livenessProbe: {}
    readinessProbe: {}
    startupProbe: {}

    ## @param airflow.webserver.command Command to use when running the Airflow webserver Default: {}
    command: ~
    ## @param airflow.webserver.args Args to use when running the Airflow webserver Default: ["bash", "-c", "exec airflow webserver"]
    args: ["bash", "-c", "exec airflow webserver"]

    ## @param airflow.webserver.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
    resources:
      requests:
        cpu: 100m
        memory: 300Mi
      limits:
        cpu: 300m
        memory: 600Mi

    ## Airflow Webserver service parameters
    service:
      ## @param airflow.webserver.service.annotations Additional custom annotations for Airflow Webserver service Default: {}
      annotations: {}
      ## @param airflow.webserver.service.type Airflow Webserver service type Default: "ClusterIP"
      type: ClusterIP
      ## @param airflow.webserver.service.port Airflow Webserver service HTTP port Default: 8080
      port: 8080
  
  ## Airflow Scheduler
  ## @param airflow.scheduler.replicas Number of Airflow Scheduler replicas Default: 1
  scheduler:
    replicas: 1
    ## @param airflow.scheduler.safeToEvict This setting tells Kubernetes that its ok to evict Default: true
    safeToEvict: true
    ## @param airflow.scheduler.annotations Add extra annotations to the Airflow Scheduler Default: {}
    annotations: {}
    ## @param airflow.scheduler.podAnnotations Add extra Pod annotations to the Airflow Scheduler pods Default: {}
    podAnnotations: {}
    ## @param airflow.scheduler.securityContexts.pod default security context for Scheduler pods Default: {}
    ## @param airflow.scheduler.securityContexts.container default security context for Scheduler containers Default: {}
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    securityContexts:
      pod: {}
      container: {}

    ## Configure extra options for Airflow containers' liveness, readiness, and startup
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/#configure-probes
    ## @param airflow.scheduler.livenessProbe livenessProbe on Airflow Scheduler
    ## @param airflow.scheduler.readinessProbe readinessProbe on Airflow Scheduler
    ## @param airflow.scheduler.startupProbe startupProbe on Airflow Scheduler
    livenessProbe: {}
    readinessProbe: {}
    startupProbe: {}

    ## @param airflow.scheduler.command Command to use when running the Airflow scheduler Default: ~
    command: ~
    ## @param airflow.scheduler.args Args to use when running the Airflow scheduler Default: ["bash", "-c", "exec airflow scheduler"]
    args: ["bash", "-c", "exec airflow scheduler"]

    ## @param airflow.scheduler.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
    resources:
      requests:
        cpu: 100m
        memory: 300Mi
      limits:
        cpu: 300m
        memory: 600Mi

  ## Airflow Worker
  worker:
    ## @param airflow.worker.safeToEvict This setting tells Kubernetes that its ok to evict Default: true
    safeToEvict: true
    ## @param airflow.worker.annotations Add extra annotations to the Airflow Worker Default: {}
    annotations: {}
    ## @param airflow.worker.podAnnotations Add extra Pod annotations to the Airflow Worker pods Default: {}
    podAnnotations: {}
    ## @param airflow.worker.securityContexts.pod default security context for Worker pods Default: {}
    ## @param airflow.worker.securityContexts.container default security context for Worker containers Default: {}
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    securityContexts:
      pod: {}
      container: {}
    
    ## @param airflow.worker.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
    resources:
      requests:
        cpu: 100m
        memory: 300Mi
      limits:
        cpu: 300m
        memory: 600Mi

  ## Airflow WaitForMigrations
  waitForMigrations:
    ## @param airflow.waitForMigrations.enabled Whether to create an init container to wait for db migrations Default: true
    enabled: true
    ## @param airflow.waitForMigrations.safeToEvict This setting tells Kubernetes that its ok to evict Default: true
    safeToEvict: true
    ## @param airflow.waitForMigrations.annotations Add extra annotations to the waitForMigrations Default: {}
    annotations: {}
    ## @param airflow.waitForMigrations.podAnnotations Add extra Pod annotations to the waitForMigrations pods Default: {}
    podAnnotations: {}
    ## @param airflow.waitForMigrations.securityContexts.container default security context for waitForMigrations containers Default: {}
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    securityContexts:
      container: {}

    ## @param airflow.waitForMigrations.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
    resources:
      requests:
        cpu: 100m
        memory: 300Mi
      limits:
        cpu: 300m
        memory: 600Mi

  ## Airflow create user job settings
  createUserJob:
    ## @param airflow.createUserJob.safeToEvict This setting tells Kubernetes that its ok to evict Default: true
    safeToEvict: true
    ## @param airflow.createUserJob.annotations Add extra annotations to the createUserJob Default: {}
    annotations: {}
    ## @param airflow.createUserJob.podAnnotations Add extra Pod annotations to the createUserJob pods Default: {}
    podAnnotations: {}
    ## @param airflow.createUserJob.securityContexts.pod default security context for createUserJob pods Default: {}
    ## @param airflow.createUserJob.securityContexts.container default security context for createUserJob containers Default: {}
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    securityContexts:
      pod: {}
      container: {}

    ## @param airflow.createUserJob.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
    resources:
      requests:
        cpu: 100m
        memory: 300Mi
      limits:
        cpu: 300m
        memory: 600Mi
  
  # Airflow database migration job settings
  migrateDatabaseJob:
    ## @param airflow.migrateDatabaseJob.enabled Whether to create an init container to wait for db migrations Default: true
    enabled: true
    ## @param airflow.migrateDatabaseJob.safeToEvict This setting tells Kubernetes that its ok to evict Default: true
    safeToEvict: true
    ## @param airflow.migrateDatabaseJob.annotations Add extra annotations to the migrateDatabaseJob Default: {}
    annotations: {}
    ## @param airflow.migrateDatabaseJob.podAnnotations Add extra Pod annotations to the migrateDatabaseJob pod Default: {}
    podAnnotations: {}
    ## @param airflow.migrateDatabaseJob.securityContexts.pod default security context for migrateDatabaseJob pod Default: {}
    ## @param airflow.migrateDatabaseJob.securityContexts.container default security context for migrateDatabaseJob containers Default: {}
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
    securityContexts:
      pod: {}
      container: {}
    
    ## @param airflow.migrateDatabaseJob.resources Set container requests and limits for different resources like CPU or memory (essential for production workloads)
    resources:
      requests:
        cpu: 100m
        memory: 300Mi
      limits:
        cpu: 300m
        memory: 600Mi
