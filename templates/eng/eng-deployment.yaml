{{- $pvcTemp := printf "%s-%s" (include "qmig.eng.fullname" .) "empty" -}}
{{- $pvc := include "qmig.pv.shared" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "qmig.eng.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "qmig.eng.labels" . | nindent 4 }}
  {{- with .Values.eng.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.eng.autoscaling.enabled }}
  replicas: {{ .Values.eng.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "qmig.eng.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.eng.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "qmig.eng.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.eng.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.eng.securityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "qmig.serviceAccountName" . }}
      {{- with .Values.eng.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.eng.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.eng.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Values.eng.name }}
          image: "{{ .Values.eng.image.repository }}:{{ .Values.eng.image.tag }}"
          imagePullPolicy: {{ .Values.eng.image.pullPolicy }}
          ports:
            - name: {{ .Values.eng.name }}-tcp
              containerPort: 8080
              protocol: TCP
          resources:
            {{- toYaml .Values.eng.resources | nindent 12 }}
          {{- with .Values.eng.containerSecurityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.name
            {{- include "qmig.eng.env" . | nindent 12 }}
            {{- range $name, $value := .Values.eng.env }}
            - name: {{ $name }}
              value: {{ $value | quote}}
            {{- end }}
            {{- range .Values.eng.envSecret }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secretRef }}
                  key: {{ .secretKey }}
            {{- end }}
          {{- if .Values.eng.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: api/v1/Sample/Healthz
              port: {{ .Values.eng.name }}-tcp
            initialDelaySeconds: {{ .Values.eng.readinessProbe.initialDelaySeconds | default 15 }}
            periodSeconds: {{ .Values.eng.readinessProbe.periodSeconds | default 60 }}
            timeoutSeconds: {{ .Values.eng.readinessProbe.timeoutSeconds | default 3 }}
            successThreshold: {{ .Values.eng.readinessProbe.successThreshold | default 1 }}
            failureThreshold: {{ .Values.eng.readinessProbe.failureThreshold | default 3}}
          {{- end }}
          {{- if .Values.eng.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: api/v1/Sample/Healthz
              port: {{ .Values.eng.name }}-tcp
            initialDelaySeconds: {{ .Values.eng.readinessProbe.initialDelaySeconds | default 15 }}
            periodSeconds: {{ .Values.eng.readinessProbe.periodSeconds | default 60 }}
            timeoutSeconds: {{ .Values.eng.readinessProbe.timeoutSeconds | default 3 }}
            successThreshold: {{ .Values.eng.readinessProbe.successThreshold | default 1 }}
            failureThreshold: {{ .Values.eng.readinessProbe.failureThreshold | default 3}}
          {{- end }}
          volumeMounts:
            - mountPath: /mnt/eng
              {{- if and .Values.globals.persistentVolume.subPath (ne (include "qmig.cloud" .) "minikube") }}
              subPath: {{ .Values.globals.persistentVolume.subPath }}
              {{- end }}
              name: {{ $pvc }}
            - mountPath: /tmp
              name: {{ $pvcTemp }}
          {{- if .Values.eng.extraVolumeMounts }}
            {{- toYaml .Values.eng.extraVolumeMounts | nindent 12 }}
          {{- end }}
      volumes:
        - name: {{ $pvc }}
          {{- if .Values.globals.persistentVolume.enabled }}
          persistentVolumeClaim:
            claimName: {{ if .Values.globals.persistentVolume.existingClaim }}{{ .Values.globals.persistentVolume.existingClaim }}{{- else }}{{ template "qmig.eng.fullname" . }}{{- end }}
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: {{ $pvcTemp }}
          emptyDir: {}
      {{- if .Values.eng.extraVolumes }}
        {{- toYaml .Values.eng.extraVolumes | nindent 8 }}
      {{- end }}
